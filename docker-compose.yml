version: '3.5'
services:
  mariadb:
    image: mariadb:latest
    container_name: ${APP_NAME}_db
    networks:
      - backend
    restart: always
    environment:
      - TZ=${TZ}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    command:
      - '--character-set-server=utf8mb4'
      - '--collation-server=utf8mb4_unicode_ci'
      - '--max-connections=512'
      - '--innodb-buffer-pool-size=256M'
      - '--innodb-log-buffer-size=32M'
      - '--innodb-file-per-table=1'
    ports:
      - '127.0.0.1:${MYSQL_EXPOSE_PORT}:3306'
    volumes:
      - './database:/var/lib/mysql'
      - './init.sql:/docker-entrypoint-initdb.d/init.sql'
    logging:
      driver: json-file
      options: { max-size: '200k', max-file: '1' }
  wordpress:
    image: wordpress:5.3.0-fpm
    container_name: ${APP_NAME}_website
    networks:
      - frontend
      - backend
    restart: always
    environment:
      - TZ=${TZ}
      - WORDPRESS_DB_HOST=mariadb:${MYSQL_EXPOSE_PORT}
      - WORDPRESS_DB_USER=${MYSQL_USER}
      - WORDPRESS_DB_NAME=${MYSQL_DATABASE}
      - WORDPRESS_DB_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - ./storage/wordpress:/var/www/html/wordpress
    logging:
      driver: json-file
      options: { max-size: '200k', max-file: '1' }
  nginx:
    image: nginx:alpine
    container_name: ${APP_NAME}_nginx
    networks:
      - frontend
    restart: always
    environment:
      - TZ=${TZ}
    ports:
      - '${NGINX_EXPORT_HTTP_PORT}:80'
    volumes:
      - ./certs:/opt/certs:ro
      - ./config/d-baze.me.conf:/etc/nginx/conf.d/default.conf:ro
      - ./config/tea2one.conf:/etc/nginx/conf.d/tea2one.conf:ro
      - ./config/nobi.conf:/etc/nginx/conf.d/nobi.conf:ro
      - ./storage/wordpress:/var/www/html/wordpress:delegated
      - ./storage/nobi:/var/www/html/nobi
      - ./storage/tea2one:/var/www/html/tea2one
    logging:
      driver: json-file
      options: { max-size: '200k', max-file: '1' }

networks:
  frontend:
    name: ${APP_NAME}_frontend
  backend:
    name: ${APP_NAME}_backend
